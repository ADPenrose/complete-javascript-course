'use strict';

// // Selecting the message and changing it.
// console.log(document.querySelector('.message').textContent);
// document.querySelector('.message').textContent = 'Correct Number! ðŸŽŠ';

// // Selecting the number and score, and changing them.
// document.querySelector('.number').textContent = 13;
// document.querySelector('.score').textContent = 10;

// // Setting and getting info from an input.
// document.querySelector('.guess').value = 23;
// console.log(document.querySelector('.guess').value);

/* PROJECT 1 */
// Define the secret random number. The random method defines a pseudo random number
// between 0 and 1. The truncate function takes only the integer part of the number,
// completely ignoring the decimals. Thus, if we want to be able to obtain a max value of 20,
// we need to multiply the number generated by random by 20, and then add 1 (max. value will
// be 20.99999, which will be transformed into 20).
let secretNumber = Math.trunc(Math.random() * 20) + 1;

// Create a variable to keep track of the score, and another for the highscore.
let score = 20;
let highscore = 0;

// Add an event listener for the "guess" button.
document.querySelector('.check').addEventListener('click', function () {
	const guess = Number(document.querySelector('.guess').value);
	// The program should only be executed while the score is greater than 0
	if (score > 1) {
		// If the user tries to guess without giving an input, we should show
		// a message that states that no number was detected on the input box.
		if (!guess) {
			document.querySelector('.message').textContent = 'â›” No number!';
			// When the user guesses right.
		} else if (guess === secretNumber) {
			document.querySelector('.message').textContent = 'ðŸŽŠ Correct Number!';
			document.querySelector('.number').textContent = secretNumber;
			// Changing the color of the background.
			document.querySelector('body').style.backgroundColor = '#60b347';
			// Changing the width of the number.
			document.querySelector('.number').style.width = '30rem';
			// Update the highscore
			if (score > highscore) {
				highscore = score;
				document.querySelector('.highscore').textContent = highscore;
			}
			// When the user guess is too high.
		} else if (guess > secretNumber) {
			document.querySelector('.message').textContent = 'ðŸ“ˆ Too high!';
			score--;
			document.querySelector('.score').textContent = score;
			// When the user guess is too low.
		} else if (guess < secretNumber) {
			document.querySelector('.message').textContent = 'ðŸ“‰ Too low!';
			score--;
			document.querySelector('.score').textContent = score;
		}
		// When the user runs out of tries.
	} else {
		document.querySelector('.message').textContent = 'ðŸ˜– You lost!';
		document.querySelector('.score').textContent = 0;
		document.querySelector('body').style.backgroundColor = '#ff0000';
	}
});

// Add an event listener for the "again" button
document.querySelector('.again').addEventListener('click', function () {
	// Restore the initial values of the score and the secret number variables
	score = 20;
	secretNumber = Math.trunc(Math.random() * 20) + 1;
	// Restore the initial conditions of the message, number, score and guess input field
	document.querySelector('.message').textContent = 'Start guessing...';
	document.querySelector('.number').textContent = '?';
	document.querySelector('.score').textContent = score;
	document.querySelector('.guess').value = '';
	// Restore CSS properties
	document.querySelector('body').style.backgroundColor = '#222';
	document.querySelector('.number').style.width = '15rem';
});
